
package it.izs.apicoltura.apimovimentazione.ws;

import it.izs.apicoltura.apianagraficaattivita.ws.ConfiguratoreServizi;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import org.aspcfs.modules.util.imports.ApplicationProperties;
import org.json.JSONObject;

import configurazione.centralizzata.nuova.gestione.ClientServizioCentralizzato;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ApidetmodEndpointService", targetNamespace = "http://ws.apimovimentazione.apicoltura.izs.it/", wsdlLocation = ConfiguratoreServizi.END_POINT+"ws/apicoltura/apimovimentazione/modello?wsdl")
public class ApidetmodEndpointService
    extends Service
{

    private final static URL APIdetmodENDPOINTSERVICE_WSDL_LOCATION;
    private final static WebServiceException APIdetmodENDPOINTSERVICE_EXCEPTION;
    private final static QName APIdetmodENDPOINTSERVICE_QNAME = new QName("http://ws.apimovimentazione.apicoltura.izs.it/", "ApidetmodEndpointService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            if(ApplicationProperties.getProperty("recupero_wsdl_locale").equals("true"))
            {
        		ClientServizioCentralizzato sclient = new ClientServizioCentralizzato();
        		JSONObject mappaEndPoints = sclient.getMappaEndpointsSca();
        		String urlGisa = null;
				if(mappaEndPoints.has("gisa_lan")){
					urlGisa = mappaEndPoints.getString("gisa_lan");

				}
					if(urlGisa==null || urlGisa.equals(""))
        			urlGisa = mappaEndPoints.getString("gisa");
				
			
        		url = new URL(urlGisa + "/" + ApplicationProperties.getProperty("END_POINT_BDAPI_LOCALE_DETTAGLIO_MOVIMENTAZIONE"));
        	}
        	else
        		url =  new URL(ApplicationProperties.getProperty("END_POINT_BDAPI")+ "ws/apicoltura/apimovimentazione/dettaglio?wsdl");
        } catch (Exception ex) {
            e = new WebServiceException(ex);
        }
        APIdetmodENDPOINTSERVICE_WSDL_LOCATION = url;
        APIdetmodENDPOINTSERVICE_EXCEPTION = e;
    }

    public ApidetmodEndpointService() {
        super(__getWsdlLocation(), APIdetmodENDPOINTSERVICE_QNAME);
    }

    public ApidetmodEndpointService(WebServiceFeature... features) {
        super(__getWsdlLocation(), APIdetmodENDPOINTSERVICE_QNAME, features);
    }

    public ApidetmodEndpointService(URL wsdlLocation) {
        super(wsdlLocation, APIdetmodENDPOINTSERVICE_QNAME);
    }

    public ApidetmodEndpointService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, APIdetmodENDPOINTSERVICE_QNAME, features);
    }

    public ApidetmodEndpointService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ApidetmodEndpointService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ApidetmodEndpoint
     */
    @WebEndpoint(name = "ApidetmodEndpointPort")
    public ApidetmodEndpoint getApidetmodEndpointPort() {
        return super.getPort(new QName("http://ws.apimovimentazione.apicoltura.izs.it/", "ApidetmodEndpointPort"), ApidetmodEndpoint.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ApidetmodEndpoint
     */
    @WebEndpoint(name = "ApidetmodEndpointPort")
    public ApidetmodEndpoint getApidetmodEndpointPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.apimovimentazione.apicoltura.izs.it/", "ApidetmodEndpointPort"), ApidetmodEndpoint.class, features);
    }

    private static URL __getWsdlLocation() {
        if (APIdetmodENDPOINTSERVICE_EXCEPTION!= null) {
            throw APIdetmodENDPOINTSERVICE_EXCEPTION;
        }
        System.out.println("##API WSDL LOCATION -->"+APIdetmodENDPOINTSERVICE_WSDL_LOCATION);
        return APIdetmodENDPOINTSERVICE_WSDL_LOCATION;
    }

}
